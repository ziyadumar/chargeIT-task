// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface OpenchargeResponse {
  dataProvider:           DataProvider;
  operatorInfo:           OperatorInfo | null;
  usageType:              UsageType | null;
  statusType:             StatusType;
  submissionStatus:       SubmissionStatus;
  userComments:           UserComment[] | null;
  percentageSimilarity:   null;
  mediaItems:             null;
  isRecentlyVerified:     boolean;
  dateLastVerified:       null;
  id:                     number;
  uuid:                   string;
  parentChargePointID:    null;
  dataProviderID:         number;
  dataProvidersReference: null | string;
  operatorID:             number | null;
  operatorsReference:     null | string;
  usageTypeID:            number | null;
  usageCost:              null | string;
  addressInfo:            AddressInfo;
  connections:            Connection[];
  numberOfPoints:         number;
  generalComments:        null;
  datePlanned:            null;
  dateLastConfirmed:      null;
  statusTypeID:           number;
  dateLastStatusUpdate:   string;
  metadataValues:         null;
  dataQualityLevel:       number;
  dateCreated:            string;
  submissionStatusTypeID: number;
}

export interface AddressInfo {
  id:                number;
  title:             string;
  addressLine1:      string;
  addressLine2:      null;
  town:              Town;
  stateOrProvince:   null;
  postcode:          string;
  countryID:         number;
  country:           Country;
  latitude:          number;
  longitude:         number;
  contactTelephone1: null | string;
  contactTelephone2: null;
  contactEmail:      null;
  accessComments:    null;
  relatedURL:        null | string;
  distance:          number;
  distanceUnit:      number;
}

export interface Country {
  isoCode:       ISOCode;
  continentCode: ContinentCode;
  id:            number;
  title:         CountryTitle;
}

export enum ContinentCode {
  Eu = "EU",
}

export enum ISOCode {
  Nl = "NL",
}

export enum CountryTitle {
  Netherlands = "Netherlands",
}

export enum Town {
  Rotterdam = "Rotterdam",
}

export interface Connection {
  id:               number;
  connectionTypeID: number;
  connectionType:   ConnectionType;
  reference:        null;
  statusTypeID:     number | null;
  statusType:       StatusType | null;
  levelID:          number;
  level:            Level;
  amps:             number | null;
  voltage:          number | null;
  powerKW:          number;
  currentTypeID:    number | null;
  currentType:      CurrentType | null;
  quantity:         number | null;
  comments:         null;
}

export interface ConnectionType {
  formalName:     FormalName;
  isDiscontinued: boolean;
  isObsolete:     boolean;
  id:             number;
  title:          ConnectionTypeTitle;
}

export enum FormalName {
  IEC621962Type2 = "IEC 62196-2 Type 2",
}

export enum ConnectionTypeTitle {
  Type2SocketOnly = "Type 2 (Socket Only)",
}

export interface CurrentType {
  description: Description;
  id:          number;
  title:       CurrentTypeTitle;
}

export enum Description {
  AlternatingCurrentSinglePhase = "Alternating Current - Single Phase",
  AlternatingCurrentThreePhase = "Alternating Current - Three Phase",
}

export enum CurrentTypeTitle {
  ACSinglePhase = "AC (Single-Phase)",
  ACThreePhase = "AC (Three-Phase)",
}

export interface Level {
  comments:            Comments;
  isFastChargeCapable: boolean;
  id:                  number;
  title:               LevelTitle;
}

export enum Comments {
  Over2KWUsuallyNonDomesticSocketType = "Over 2 kW, usually non-domestic socket type",
}

export enum LevelTitle {
  Level2MediumOver2KW = "Level 2 : Medium (Over 2kW)",
}

export interface StatusType {
  isOperational:    boolean;
  isUserSelectable: boolean;
  id:               number;
  title:            StatusTypeTitle;
}

export enum StatusTypeTitle {
  Operational = "Operational",
}

export interface DataProvider {
  websiteURL:             string;
  comments:               null;
  dataProviderStatusType: DataProviderStatusType;
  isRestrictedEdit:       boolean;
  isOpenDataLicensed:     boolean;
  isApprovedImport:       boolean;
  license:                string;
  dateLastImported:       null | string;
  id:                     number;
  title:                  DataProviderTitle;
}

export interface DataProviderStatusType {
  isProviderEnabled: boolean;
  id:                number;
  title:             DataProviderStatusTypeTitle;
}

export enum DataProviderStatusTypeTitle {
  AutomatedImport = "Automated Import",
  ManualDataEntry = "Manual Data Entry",
}

export enum DataProviderTitle {
  OpenChargeMapContributors = "Open Charge Map Contributors",
  OplaadpalenNl = "Oplaadpalen.nl",
}

export interface OperatorInfo {
  websiteURL:            string;
  comments:              null;
  phonePrimaryContact:   null | string;
  phoneSecondaryContact: null;
  isPrivateIndividual:   boolean | null;
  addressInfo:           null;
  bookingURL:            null;
  contactEmail:          null | string;
  faultReportEmail:      null | string;
  isRestrictedEdit:      boolean | null;
  id:                    number;
  title:                 string;
}

export interface SubmissionStatus {
  isLive: boolean;
  id:     number;
  title:  SubmissionStatusTitle;
}

export enum SubmissionStatusTitle {
  ImportedAndPublished = "Imported and Published",
  SubmissionPublished = "Submission Published",
}

export interface UsageType {
  isPayAtLocation:      null;
  isMembershipRequired: null;
  isAccessKeyRequired:  null;
  id:                   number;
  title:                string;
}

export interface UserComment {
  id:                  number;
  chargePointID:       number;
  commentTypeID:       number;
  commentType:         CommentType;
  userName:            string;
  comment:             string;
  rating:              number;
  relatedURL:          null;
  dateCreated:         string;
  user:                User;
  checkinStatusTypeID: number;
  checkinStatusType:   CheckinStatusType;
  isActionedByEditor:  null;
}

export interface CheckinStatusType {
  isPositive:         boolean;
  isAutomatedCheckin: boolean;
  id:                 number;
  title:              string;
}

export interface CommentType {
  id:    number;
  title: string;
}

export interface User {
  id:                          number;
  identityProvider:            null;
  identifier:                  null;
  currentSessionToken:         null;
  username:                    string;
  profile:                     null;
  location:                    null;
  websiteURL:                  null;
  reputationPoints:            number;
  permissions:                 null;
  permissionsRequested:        null;
  dateCreated:                 null;
  dateLastLogin:               null;
  isProfilePublic:             null;
  isEmergencyChargingProvider: null;
  isPublicChargingProvider:    null;
  latitude:                    null;
  longitude:                   null;
  emailAddress:                null;
  emailHash:                   null;
  profileImageURL:             string;
  isCurrentSessionTokenValid:  null;
  apiKey:                      null;
  syncedSettings:              null;
}
